name: Pre-release on CI Success

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: write

jobs:
  create-prerelease:
    runs-on: ubuntu-latest
    # Only run if CI passes and on main branch
    if: >
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    steps:
      # Note: Checking out workflow_run.head_sha is safe here because:
      # 1. This only runs on main branch (checked in job if condition)
      # 2. This only runs after CI passes successfully
      # 3. We use the exact SHA that passed CI, not a branch ref
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25.3'

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Generate tag name
        id: tag
        env:
          HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
        run: |
          SHA=$(echo "$HEAD_SHA" | cut -c1-7)
          TIMESTAMP=$(date -u +%Y%m%d-%H%M%S)
          TAG="prerelease-${TIMESTAMP}-${SHA}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "sha=${SHA}" >> $GITHUB_OUTPUT

      - name: Create and push tag for GoReleaser
        env:
          TAG: ${{ steps.tag.outputs.tag }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Automated pre-release $TAG"
          git push origin "$TAG"

      - name: Run GoReleaser to build and create pre-release
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
